# Reading pref.tcl
# OpenFile {C:/Users/ajaym/Documents/TCES 330/Project/Control.sv}
do runrtlControl.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:28:59 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 18:28:59 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:28:59 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 18:28:59 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:28:59 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 18:28:59 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:28:59 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 18:29:00 on Jun 03,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:00 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 18:29:00 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Control_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Control_tb 
# Start time: 18:29:00 on Jun 03,2021
# Loading sv_std.std
# Loading work.Control_tb
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Control_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Control_tb/Clk
# add wave -noupdate /Control_tb/Rst
# add wave -noupdate /Control_tb/PC_Out
# add wave -noupdate /Control_tb/IR_Out
# add wave -noupdate /Control_tb/OutState
# add wave -noupdate /Control_tb/NextState
# add wave -noupdate /Control_tb/D_Addr
# add wave -noupdate /Control_tb/D_Wr
# add wave -noupdate /Control_tb/RF_s
# add wave -noupdate /Control_tb/RF_W_en
# add wave -noupdate /Control_tb/RF_Ra_Addr
# add wave -noupdate /Control_tb/RF_Rb_Addr
# add wave -noupdate /Control_tb/RF_W_Addr
# add wave -noupdate /Control_tb/Alu_s0
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0  Reset =1   PC_out=  0   IR_out=    x   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   10  Reset =1   PC_out=  0   IR_out=    x   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   30  Reset =1   PC_out=  1   IR_out=    0   OutState= 2   NextState= 3   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   50  Reset =1   PC_out=  1   IR_out=    0   OutState= 3   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   70  Reset =1   PC_out=  1   IR_out=    0   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   90  Reset =1   PC_out=  2   IR_out= 8369   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  110  Reset =1   PC_out=  2   IR_out= 8369   OutState= 4   NextState= 5   D_Addr= 11   D_Wr=0  RF_s=1   RF_W_Addr= 1   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  130  Reset =1   PC_out=  2   IR_out= 8369   OutState= 5   NextState= 1   D_Addr= 11   D_Wr=0  RF_s=1   RF_W_Addr= 1   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  150  Reset =1   PC_out=  2   IR_out= 8369   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  170  Reset =1   PC_out=  3   IR_out= 8626   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  190  Reset =1   PC_out=  3   IR_out= 8626   OutState= 4   NextState= 5   D_Addr= 27   D_Wr=0  RF_s=1   RF_W_Addr= 2   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  210  Reset =1   PC_out=  3   IR_out= 8626   OutState= 5   NextState= 1   D_Addr= 27   D_Wr=0  RF_s=1   RF_W_Addr= 2   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  230  Reset =1   PC_out=  3   IR_out= 8626   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  250  Reset =1   PC_out=  4   IR_out=16675   OutState= 2   NextState= 8   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  270  Reset =1   PC_out=  4   IR_out=16675   OutState= 8   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 3   RF_W_en=1   RF_Ra_Addr= 1   RF_Rb_Addrn= 2   ALU_so=2  
#                  290  Reset =1   PC_out=  4   IR_out=16675   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  310  Reset =1   PC_out=  5   IR_out= 8292   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  330  Reset =1   PC_out=  5   IR_out= 8292   OutState= 4   NextState= 5   D_Addr=  6   D_Wr=0  RF_s=1   RF_W_Addr= 4   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  350  Reset =1   PC_out=  5   IR_out= 8292   OutState= 5   NextState= 1   D_Addr=  6   D_Wr=0  RF_s=1   RF_W_Addr= 4   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  370  Reset =1   PC_out=  5   IR_out= 8292   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  390  Reset =1   PC_out=  6   IR_out=13125   OutState= 2   NextState= 7   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  410  Reset =1   PC_out=  6   IR_out=13125   OutState= 7   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 5   RF_W_en=1   RF_Ra_Addr= 3   RF_Rb_Addrn= 4   ALU_so=1  
#                  430  Reset =1   PC_out=  6   IR_out=13125   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  450  Reset =1   PC_out=  7   IR_out=10406   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  470  Reset =1   PC_out=  7   IR_out=10406   OutState= 4   NextState= 5   D_Addr=138   D_Wr=0  RF_s=1   RF_W_Addr= 6   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  490  Reset =1   PC_out=  7   IR_out=10406   OutState= 5   NextState= 1   D_Addr=138   D_Wr=0  RF_s=1   RF_W_Addr= 6   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  510  Reset =1   PC_out=  7   IR_out=10406   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  530  Reset =1   PC_out=  8   IR_out=17760   OutState= 2   NextState= 8   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  550  Reset =1   PC_out=  8   IR_out=17760   OutState= 8   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=1   RF_Ra_Addr= 5   RF_Rb_Addrn= 6   ALU_so=2  
#                  570  Reset =1   PC_out=  8   IR_out=17760   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  590  Reset =1   PC_out=  9   IR_out= 4301   OutState= 2   NextState= 6   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  610  Reset =1   PC_out=  9   IR_out= 4301   OutState= 6   NextState= 1   D_Addr=205   D_Wr=1  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  630  Reset =1   PC_out=  9   IR_out= 4301   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  650  Reset =1   PC_out= 10   IR_out=20480   OutState= 2   NextState= 9   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  670  Reset =1   PC_out= 10   IR_out=20480   OutState= 9   NextState= 9   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  810  Reset =0   PC_out= 10   IR_out=20480   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  830  Reset =0   PC_out=  0   IR_out=20480   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
# ** Note: $stop    : ./Control.sv(70)
#    Time: 850 ns  Iteration: 0  Instance: /Control_tb
# Break in Module Control_tb at ./Control.sv line 70
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 892500 ps
# 
# End
do runProcessor(rtl).do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# 
# Top level modules:
# 	Processor
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./MUX_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./MUX_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 18:29:23 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regfile16x16a.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:23 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 18:29:24 on Jun 03,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:29:24 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 18:29:24 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 18:29:25 on Jun 03,2021, Elapsed time: 0:00:25
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 18:29:25 on Jun 03,2021
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading work.Datapath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.regfile16x16a
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveProcessor.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 20000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 30000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 50000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 3 RF_s=0 WData=    0
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 3 NextState= 1 RF_s=0 WData=    0
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 110000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 130000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 150000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 170000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 190000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 210000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 230000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 250000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 270000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 290000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 8 NextState= 1 RF_s=0 WData=    0
# Time is 310000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 330000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 350000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 370000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 390000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 410000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 7 RF_s=0 WData=    0
# Time is 430000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 7  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 7 NextState= 1 RF_s=0 WData=    0
# Time is 450000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 470000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 490000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 510000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 530000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 550000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 570000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 8 NextState= 1 RF_s=0 WData=    0
# Time is 590000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 610000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 2  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 2 NextState= 6 RF_s=0 WData=    0
# Time is 630000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 6  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 6 NextState= 1 RF_s=0 WData=    0
# Time is 650000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 670 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 703500 ps
# 
# End
do runProcessor(rtl).do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/ajaym/Documents/TCES 330/Project/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/ajaym/Documents/TCES 330/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# 
# Top level modules:
# 	Processor
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./MUX_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./MUX_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regfile16x16a.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 18:53:20 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:53:20 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 18:53:21 on Jun 03,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 18:53:22 on Jun 03,2021, Elapsed time: 0:23:57
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 18:53:22 on Jun 03,2021
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading work.Datapath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.regfile16x16a
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveProcessor.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 20000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 30000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 50000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 3 RF_s=0 WData=    0
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 3 NextState= 1 RF_s=0 WData=    0
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 110000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 130000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 150000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 170000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 190000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 210000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 230000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 250000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 270000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 290000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 8 NextState= 1 RF_s=0 WData=    0
# Time is 310000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 330000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 350000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 370000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 390000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 410000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 7 RF_s=0 WData=    0
# Time is 430000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 7  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 7 NextState= 1 RF_s=0 WData=    0
# Time is 450000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 470000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 490000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 510000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 530000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 550000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 570000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 8 NextState= 1 RF_s=0 WData=    0
# Time is 590000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 610000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 2  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 2 NextState= 6 RF_s=0 WData=    0
# Time is 630000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 6  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 6 NextState= 1 RF_s=0 WData=    0
# Time is 650000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 670 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 703500 ps
# 
# End
do runProcessor(rtl).do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/ajaym/Documents/TCES 330/Project/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/ajaym/Documents/TCES 330/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# 
# Top level modules:
# 	Processor
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./MUX_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./MUX_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regfile16x16a.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:31 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 19:24:31 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 19:24:33 on Jun 03,2021, Elapsed time: 0:31:11
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:24:33 on Jun 03,2021
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading work.Datapath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.regfile16x16a
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveProcessor.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 20000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 30000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 50000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 3 RF_s=0 WData=    0
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 3 NextState= 1 RF_s=0 WData=    0
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 110000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 130000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 150000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 170000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 190000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 210000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 230000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 250000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 270000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 290000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 8 NextState= 1 RF_s=0 WData=    0
# Time is 310000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 330000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 350000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 370000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 390000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 410000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 7 RF_s=0 WData=    0
# Time is 430000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 7  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 7 NextState= 1 RF_s=0 WData=    0
# Time is 450000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 470000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 490000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 510000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=    0
# Time is 530000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 550000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 570000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 8 NextState= 1 RF_s=0 WData=    0
# Time is 590000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 610000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 2  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 2 NextState= 6 RF_s=0 WData=    0
# Time is 630000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 6  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 6 NextState= 1 RF_s=0 WData=    0
# Time is 650000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 670 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 703500 ps
# 
# End
do runrtlControl.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:42 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 19:24:42 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:42 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 19:24:42 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:42 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 19:24:42 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:42 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:24:42 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:42 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 19:24:42 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Control_tb
# End time: 19:24:44 on Jun 03,2021, Elapsed time: 0:00:11
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Control_tb 
# Start time: 19:24:44 on Jun 03,2021
# Loading sv_std.std
# Loading work.Control_tb
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Control_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Control_tb/Clk
# add wave -noupdate /Control_tb/Rst
# add wave -noupdate /Control_tb/PC_Out
# add wave -noupdate /Control_tb/IR_Out
# add wave -noupdate /Control_tb/OutState
# add wave -noupdate /Control_tb/NextState
# add wave -noupdate /Control_tb/D_Addr
# add wave -noupdate /Control_tb/D_Wr
# add wave -noupdate /Control_tb/RF_s
# add wave -noupdate /Control_tb/RF_W_en
# add wave -noupdate /Control_tb/RF_Ra_Addr
# add wave -noupdate /Control_tb/RF_Rb_Addr
# add wave -noupdate /Control_tb/RF_W_Addr
# add wave -noupdate /Control_tb/Alu_s0
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0  Reset =1   PC_out=  0   IR_out=    x   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   10  Reset =1   PC_out=  0   IR_out=    x   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   30  Reset =1   PC_out=  1   IR_out=    0   OutState= 2   NextState= 3   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   50  Reset =1   PC_out=  1   IR_out=    0   OutState= 3   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   70  Reset =1   PC_out=  1   IR_out=    0   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   90  Reset =1   PC_out=  2   IR_out= 8369   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  110  Reset =1   PC_out=  2   IR_out= 8369   OutState= 4   NextState= 5   D_Addr= 11   D_Wr=0  RF_s=1   RF_W_Addr= 1   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  130  Reset =1   PC_out=  2   IR_out= 8369   OutState= 5   NextState= 1   D_Addr= 11   D_Wr=0  RF_s=1   RF_W_Addr= 1   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  150  Reset =1   PC_out=  2   IR_out= 8369   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  170  Reset =1   PC_out=  3   IR_out= 8626   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  190  Reset =1   PC_out=  3   IR_out= 8626   OutState= 4   NextState= 5   D_Addr= 27   D_Wr=0  RF_s=1   RF_W_Addr= 2   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  210  Reset =1   PC_out=  3   IR_out= 8626   OutState= 5   NextState= 1   D_Addr= 27   D_Wr=0  RF_s=1   RF_W_Addr= 2   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  230  Reset =1   PC_out=  3   IR_out= 8626   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  250  Reset =1   PC_out=  4   IR_out=16675   OutState= 2   NextState= 8   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  270  Reset =1   PC_out=  4   IR_out=16675   OutState= 8   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 3   RF_W_en=1   RF_Ra_Addr= 1   RF_Rb_Addrn= 2   ALU_so=2  
#                  290  Reset =1   PC_out=  4   IR_out=16675   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  310  Reset =1   PC_out=  5   IR_out= 8292   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  330  Reset =1   PC_out=  5   IR_out= 8292   OutState= 4   NextState= 5   D_Addr=  6   D_Wr=0  RF_s=1   RF_W_Addr= 4   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  350  Reset =1   PC_out=  5   IR_out= 8292   OutState= 5   NextState= 1   D_Addr=  6   D_Wr=0  RF_s=1   RF_W_Addr= 4   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  370  Reset =1   PC_out=  5   IR_out= 8292   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  390  Reset =1   PC_out=  6   IR_out=13125   OutState= 2   NextState= 7   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  410  Reset =1   PC_out=  6   IR_out=13125   OutState= 7   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 5   RF_W_en=1   RF_Ra_Addr= 3   RF_Rb_Addrn= 4   ALU_so=1  
#                  430  Reset =1   PC_out=  6   IR_out=13125   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  450  Reset =1   PC_out=  7   IR_out=10406   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  470  Reset =1   PC_out=  7   IR_out=10406   OutState= 4   NextState= 5   D_Addr=138   D_Wr=0  RF_s=1   RF_W_Addr= 6   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  490  Reset =1   PC_out=  7   IR_out=10406   OutState= 5   NextState= 1   D_Addr=138   D_Wr=0  RF_s=1   RF_W_Addr= 6   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  510  Reset =1   PC_out=  7   IR_out=10406   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  530  Reset =1   PC_out=  8   IR_out=17760   OutState= 2   NextState= 8   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  550  Reset =1   PC_out=  8   IR_out=17760   OutState= 8   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=1   RF_Ra_Addr= 5   RF_Rb_Addrn= 6   ALU_so=2  
#                  570  Reset =1   PC_out=  8   IR_out=17760   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  590  Reset =1   PC_out=  9   IR_out= 4301   OutState= 2   NextState= 6   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  610  Reset =1   PC_out=  9   IR_out= 4301   OutState= 6   NextState= 1   D_Addr=205   D_Wr=1  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  630  Reset =1   PC_out=  9   IR_out= 4301   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  650  Reset =1   PC_out= 10   IR_out=20480   OutState= 2   NextState= 9   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  670  Reset =1   PC_out= 10   IR_out=20480   OutState= 9   NextState= 9   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  810  Reset =0   PC_out= 10   IR_out=20480   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  830  Reset =0   PC_out=  0   IR_out=20480   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
# ** Note: $stop    : ./Control.sv(70)
#    Time: 850 ns  Iteration: 0  Instance: /Control_tb
# Break in Module Control_tb at ./Control.sv line 70
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 892500 ps
# 
# End
do runrtlControl.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/ajaym/Documents/TCES 330/Project/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/ajaym/Documents/TCES 330/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:03 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 19:52:03 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:03 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 19:52:03 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:03 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 19:52:03 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:03 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:52:03 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:03 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 19:52:03 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Control_tb
# End time: 19:52:06 on Jun 03,2021, Elapsed time: 0:27:22
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Control_tb 
# Start time: 19:52:06 on Jun 03,2021
# Loading sv_std.std
# Loading work.Control_tb
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Control_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Control_tb/Clk
# add wave -noupdate /Control_tb/Rst
# add wave -noupdate /Control_tb/PC_Out
# add wave -noupdate /Control_tb/IR_Out
# add wave -noupdate /Control_tb/OutState
# add wave -noupdate /Control_tb/NextState
# add wave -noupdate /Control_tb/D_Addr
# add wave -noupdate /Control_tb/D_Wr
# add wave -noupdate /Control_tb/RF_s
# add wave -noupdate /Control_tb/RF_W_en
# add wave -noupdate /Control_tb/RF_Ra_Addr
# add wave -noupdate /Control_tb/RF_Rb_Addr
# add wave -noupdate /Control_tb/RF_W_Addr
# add wave -noupdate /Control_tb/Alu_s0
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0  Reset =1   PC_out=  0   IR_out=    x   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   10  Reset =1   PC_out=  0   IR_out=    x   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   30  Reset =1   PC_out=  1   IR_out=    0   OutState= 2   NextState= 3   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   50  Reset =1   PC_out=  1   IR_out=    0   OutState= 3   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   70  Reset =1   PC_out=  1   IR_out=    0   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                   90  Reset =1   PC_out=  2   IR_out= 8369   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  110  Reset =1   PC_out=  2   IR_out= 8369   OutState= 4   NextState= 5   D_Addr= 11   D_Wr=0  RF_s=1   RF_W_Addr= 1   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  130  Reset =1   PC_out=  2   IR_out= 8369   OutState= 5   NextState= 1   D_Addr= 11   D_Wr=0  RF_s=1   RF_W_Addr= 1   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  150  Reset =1   PC_out=  2   IR_out= 8369   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  170  Reset =1   PC_out=  3   IR_out= 8626   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  190  Reset =1   PC_out=  3   IR_out= 8626   OutState= 4   NextState= 5   D_Addr= 27   D_Wr=0  RF_s=1   RF_W_Addr= 2   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  210  Reset =1   PC_out=  3   IR_out= 8626   OutState= 5   NextState= 1   D_Addr= 27   D_Wr=0  RF_s=1   RF_W_Addr= 2   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  230  Reset =1   PC_out=  3   IR_out= 8626   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  250  Reset =1   PC_out=  4   IR_out=16675   OutState= 2   NextState= 8   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  270  Reset =1   PC_out=  4   IR_out=16675   OutState= 8   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 3   RF_W_en=1   RF_Ra_Addr= 1   RF_Rb_Addrn= 2   ALU_so=2  
#                  290  Reset =1   PC_out=  4   IR_out=16675   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  310  Reset =1   PC_out=  5   IR_out= 8292   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  330  Reset =1   PC_out=  5   IR_out= 8292   OutState= 4   NextState= 5   D_Addr=  6   D_Wr=0  RF_s=1   RF_W_Addr= 4   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  350  Reset =1   PC_out=  5   IR_out= 8292   OutState= 5   NextState= 1   D_Addr=  6   D_Wr=0  RF_s=1   RF_W_Addr= 4   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  370  Reset =1   PC_out=  5   IR_out= 8292   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  390  Reset =1   PC_out=  6   IR_out=13125   OutState= 2   NextState= 7   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  410  Reset =1   PC_out=  6   IR_out=13125   OutState= 7   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 5   RF_W_en=1   RF_Ra_Addr= 3   RF_Rb_Addrn= 4   ALU_so=1  
#                  430  Reset =1   PC_out=  6   IR_out=13125   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  450  Reset =1   PC_out=  7   IR_out=10406   OutState= 2   NextState= 4   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  470  Reset =1   PC_out=  7   IR_out=10406   OutState= 4   NextState= 5   D_Addr=138   D_Wr=0  RF_s=1   RF_W_Addr= 6   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  490  Reset =1   PC_out=  7   IR_out=10406   OutState= 5   NextState= 1   D_Addr=138   D_Wr=0  RF_s=1   RF_W_Addr= 6   RF_W_en=1   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  510  Reset =1   PC_out=  7   IR_out=10406   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  530  Reset =1   PC_out=  8   IR_out=17760   OutState= 2   NextState= 8   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  550  Reset =1   PC_out=  8   IR_out=17760   OutState= 8   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=1   RF_Ra_Addr= 5   RF_Rb_Addrn= 6   ALU_so=2  
#                  570  Reset =1   PC_out=  8   IR_out=17760   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  590  Reset =1   PC_out=  9   IR_out= 4301   OutState= 2   NextState= 6   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  610  Reset =1   PC_out=  9   IR_out= 4301   OutState= 6   NextState= 1   D_Addr=205   D_Wr=1  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  630  Reset =1   PC_out=  9   IR_out= 4301   OutState= 1   NextState= 2   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  650  Reset =1   PC_out= 10   IR_out=20480   OutState= 2   NextState= 9   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  670  Reset =1   PC_out= 10   IR_out=20480   OutState= 9   NextState= 9   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  810  Reset =0   PC_out= 10   IR_out=20480   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
#                  830  Reset =0   PC_out=  0   IR_out=20480   OutState= 0   NextState= 1   D_Addr=  0   D_Wr=0  RF_s=0   RF_W_Addr= 0   RF_W_en=0   RF_Ra_Addr= 0   RF_Rb_Addrn= 0   ALU_so=0  
# ** Note: $stop    : ./Control.sv(70)
#    Time: 850 ns  Iteration: 0  Instance: /Control_tb
# Break in Module Control_tb at ./Control.sv line 70
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 892500 ps
# 
# End
do runALU.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:36 on Jun 03,2021
# vlog -reportprogress 300 ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:54:36 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 19:54:39 on Jun 03,2021, Elapsed time: 0:02:33
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work ALU_tb 
# Start time: 19:54:39 on Jun 03,2021
# Loading sv_std.std
# Loading work.ALU_tb
# Loading work.ALU
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
#                    0   Sel = 0   A =  4297   B = 23673   Q =     0
#                   10   Sel = 1   A = 24515   B = 23523   Q = 48038
#                   20   Sel = 2   A = 18919   B = 14806   Q =  4113
#                   30   Sel = 3   A = 23272   B = 25494   Q = 23272
#                   40   Sel = 4   A =  6065   B = 22845   Q = 20108
#                   50   Sel = 5   A = 21169   B = 10709   Q = 31733
#                   60   Sel = 6   A = 21561   B = 12407   Q =  4145
#                   70   Sel = 7   A = 20680   B =  8698   Q = 20681
do runDatapath(rtl).do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:55:10 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 19:55:10 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:55:10 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:55:10 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:55:10 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:55:10 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:55:10 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 19:55:10 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regfile16x16a.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:55:10 on Jun 03,2021
# vlog -reportprogress 300 -work work "+acc" ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 19:55:10 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 19:55:13 on Jun 03,2021, Elapsed time: 0:00:34
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 19:55:13 on Jun 03,2021
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_2_to_1
# Loading work.regfile16x16a
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/clk
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0  D_Addr =  11 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  1 	 RF_W_en = 1 	 RF_Ra_Addr =  1 	 RF_Rb_Addr =  1 	 ALU_s0 = 0 	 ALU_inA =     x 	 ALU_inB =     x 	 ALU_out =     0 	 R_data =     0 	 W_Data =     0
#                   10  D_Addr =  11 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  1 	 RF_W_en = 1 	 RF_Ra_Addr =  1 	 RF_Rb_Addr =  1 	 ALU_s0 = 0 	 ALU_inA =     0 	 ALU_inB =     0 	 ALU_out =     0 	 R_data =     0 	 W_Data =     0
#                   30  D_Addr =  11 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  1 	 RF_W_en = 1 	 RF_Ra_Addr =  1 	 RF_Rb_Addr =  1 	 ALU_s0 = 0 	 ALU_inA =     0 	 ALU_inB =     0 	 ALU_out =     0 	 R_data = 52229 	 W_Data = 52229
#                   50  D_Addr =  11 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  1 	 RF_W_en = 1 	 RF_Ra_Addr =  1 	 RF_Rb_Addr =  1 	 ALU_s0 = 0 	 ALU_inA = 52229 	 ALU_inB = 52229 	 ALU_out =     0 	 R_data = 52229 	 W_Data = 52229
#                  120  D_Addr =  27 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  2 	 RF_W_en = 1 	 RF_Ra_Addr =  2 	 RF_Rb_Addr =  2 	 ALU_s0 = 0 	 ALU_inA =     x 	 ALU_inB =     x 	 ALU_out =     0 	 R_data = 52229 	 W_Data = 52229
#                  130  D_Addr =  27 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  2 	 RF_W_en = 1 	 RF_Ra_Addr =  2 	 RF_Rb_Addr =  2 	 ALU_s0 = 0 	 ALU_inA = 52229 	 ALU_inB = 52229 	 ALU_out =     0 	 R_data = 52229 	 W_Data = 52229
#                  150  D_Addr =  27 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  2 	 RF_W_en = 1 	 RF_Ra_Addr =  2 	 RF_Rb_Addr =  2 	 ALU_s0 = 0 	 ALU_inA = 52229 	 ALU_inB = 52229 	 ALU_out =     0 	 R_data =   437 	 W_Data =   437
#                  170  D_Addr =  27 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  2 	 RF_W_en = 1 	 RF_Ra_Addr =  2 	 RF_Rb_Addr =  2 	 ALU_s0 = 0 	 ALU_inA =   437 	 ALU_inB =   437 	 ALU_out =     0 	 R_data =   437 	 W_Data =   437
#                  240  D_Addr =   6 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  4 	 RF_W_en = 1 	 RF_Ra_Addr =  4 	 RF_Rb_Addr =  4 	 ALU_s0 = 0 	 ALU_inA =     x 	 ALU_inB =     x 	 ALU_out =     0 	 R_data =   437 	 W_Data =   437
#                  250  D_Addr =   6 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  4 	 RF_W_en = 1 	 RF_Ra_Addr =  4 	 RF_Rb_Addr =  4 	 ALU_s0 = 0 	 ALU_inA =   437 	 ALU_inB =   437 	 ALU_out =     0 	 R_data =   437 	 W_Data =   437
#                  270  D_Addr =   6 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  4 	 RF_W_en = 1 	 RF_Ra_Addr =  4 	 RF_Rb_Addr =  4 	 ALU_s0 = 0 	 ALU_inA =   437 	 ALU_inB =   437 	 ALU_out =     0 	 R_data =  4268 	 W_Data =  4268
#                  290  D_Addr =   6 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  4 	 RF_W_en = 1 	 RF_Ra_Addr =  4 	 RF_Rb_Addr =  4 	 ALU_s0 = 0 	 ALU_inA =  4268 	 ALU_inB =  4268 	 ALU_out =     0 	 R_data =  4268 	 W_Data =  4268
#                  360  D_Addr = 138 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  5 	 RF_W_en = 1 	 RF_Ra_Addr =  5 	 RF_Rb_Addr =  5 	 ALU_s0 = 0 	 ALU_inA =     x 	 ALU_inB =     x 	 ALU_out =     0 	 R_data =  4268 	 W_Data =  4268
#                  370  D_Addr = 138 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  5 	 RF_W_en = 1 	 RF_Ra_Addr =  5 	 RF_Rb_Addr =  5 	 ALU_s0 = 0 	 ALU_inA =  4268 	 ALU_inB =  4268 	 ALU_out =     0 	 R_data =  4268 	 W_Data =  4268
#                  390  D_Addr = 138 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  5 	 RF_W_en = 1 	 RF_Ra_Addr =  5 	 RF_Rb_Addr =  5 	 ALU_s0 = 0 	 ALU_inA =  4268 	 ALU_inB =  4268 	 ALU_out =     0 	 R_data = 41024 	 W_Data = 41024
#                  410  D_Addr = 138 	 D_Wr = 0 	 RF_s = 1 	 RF_W_Addr =  5 	 RF_W_en = 1 	 RF_Ra_Addr =  5 	 RF_Rb_Addr =  5 	 ALU_s0 = 0 	 ALU_inA = 41024 	 ALU_inB = 41024 	 ALU_out =     0 	 R_data = 41024 	 W_Data = 41024
#                  480  D_Addr =   0 	 D_Wr = 0 	 RF_s = 0 	 RF_W_Addr =  3 	 RF_W_en = 1 	 RF_Ra_Addr =  1 	 RF_Rb_Addr =  2 	 ALU_s0 = 2 	 ALU_inA = 52229 	 ALU_inB =   437 	 ALU_out = 51792 	 R_data = 41024 	 W_Data = 51792
#                  510  D_Addr =   0 	 D_Wr = 0 	 RF_s = 0 	 RF_W_Addr =  3 	 RF_W_en = 1 	 RF_Ra_Addr =  1 	 RF_Rb_Addr =  2 	 ALU_s0 = 2 	 ALU_inA = 52229 	 ALU_inB =   437 	 ALU_out = 51792 	 R_data =     0 	 W_Data = 51792
#                  600  D_Addr =   0 	 D_Wr = 0 	 RF_s = 0 	 RF_W_Addr =  6 	 RF_W_en = 1 	 RF_Ra_Addr =  4 	 RF_Rb_Addr =  5 	 ALU_s0 = 1 	 ALU_inA =  4268 	 ALU_inB = 41024 	 ALU_out = 45292 	 R_data =     0 	 W_Data = 45292
#                  720  D_Addr =   0 	 D_Wr = 0 	 RF_s = 0 	 RF_W_Addr =  0 	 RF_W_en = 1 	 RF_Ra_Addr =  3 	 RF_Rb_Addr =  6 	 ALU_s0 = 1 	 ALU_inA = 51792 	 ALU_inB = 45292 	 ALU_out = 31548 	 R_data =     0 	 W_Data = 31548
#                  840  D_Addr = 205 	 D_Wr = 1 	 RF_s = 0 	 RF_W_Addr =  0 	 RF_W_en = 0 	 RF_Ra_Addr =  0 	 RF_Rb_Addr =  0 	 ALU_s0 = 0 	 ALU_inA = 31548 	 ALU_inB = 31548 	 ALU_out =     0 	 R_data =     0 	 W_Data =     0
#                  870  D_Addr = 205 	 D_Wr = 1 	 RF_s = 0 	 RF_W_Addr =  0 	 RF_W_en = 0 	 RF_Ra_Addr =  0 	 RF_Rb_Addr =  0 	 ALU_s0 = 0 	 ALU_inA = 31548 	 ALU_inB = 31548 	 ALU_out =     0 	 R_data = 31548 	 W_Data =     0
# ** Note: $stop    : ./Datapath.sv(56)
#    Time: 960 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 56
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 1008 ns
# 
# End
do runFSM.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:55:41 on Jun 03,2021
# vlog -reportprogress 300 ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 19:55:41 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 19:55:44 on Jun 03,2021, Elapsed time: 0:00:31
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work FSM_tb 
# Start time: 19:55:44 on Jun 03,2021
# Loading sv_std.std
# Loading work.FSM_tb
# Loading work.FSM
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
#                    0  Clock=0   Reset =1   IR=0000011111100111   OutNext= 1   OutState= 0   PC_clr=1   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 0
#                   10  Clock=1   Reset =1   IR=0000011111100111   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                   20  Clock=0   Reset =1   IR=0000011111100111   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                   30  Clock=1   Reset =1   IR=0000011111100111   OutNext= 3   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                   40  Clock=0   Reset =1   IR=0000011111100111   OutNext= 3   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                   50  Clock=1   Reset =1   IR=0000011111100111   OutNext= 1   OutState= 3   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 3
#                   60  Clock=0   Reset =1   IR=0000011111100111   OutNext= 1   OutState= 3   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 3
#                   63  Clock=0   Reset =1   IR=0001101001111100   OutNext= 1   OutState= 3   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 3
#                   70  Clock=1   Reset =1   IR=0001101001111100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                   80  Clock=0   Reset =1   IR=0001101001111100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                   90  Clock=1   Reset =1   IR=0001101001111100   OutNext= 6   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  100  Clock=0   Reset =1   IR=0001101001111100   OutNext= 6   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  110  Clock=1   Reset =1   IR=0001101001111100   OutNext= 1   OutState= 6   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=124   D_wr=1   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr=10   RF_Rb_addr= 0   CurrentState= 6
#                  120  Clock=0   Reset =1   IR=0001101001111100   OutNext= 1   OutState= 6   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=124   D_wr=1   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr=10   RF_Rb_addr= 0   CurrentState= 6
#                  123  Clock=0   Reset =1   IR=0010011110011100   OutNext= 1   OutState= 6   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=156   D_wr=1   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 7   RF_Rb_addr= 0   CurrentState= 6
#                  130  Clock=1   Reset =1   IR=0010011110011100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  140  Clock=0   Reset =1   IR=0010011110011100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  150  Clock=1   Reset =1   IR=0010011110011100   OutNext= 4   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  160  Clock=0   Reset =1   IR=0010011110011100   OutNext= 4   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  170  Clock=1   Reset =1   IR=0010011110011100   OutNext= 5   OutState= 4   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=121   D_wr=0   RF_s=1   RF_W_addr=12   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 4
#                  180  Clock=0   Reset =1   IR=0010011110011100   OutNext= 5   OutState= 4   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=121   D_wr=0   RF_s=1   RF_W_addr=12   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 4
#                  190  Clock=1   Reset =1   IR=0010011110011100   OutNext= 1   OutState= 5   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=121   D_wr=0   RF_s=1   RF_W_addr=12   RF_W_en=1   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 5
#                  200  Clock=0   Reset =1   IR=0010011110011100   OutNext= 1   OutState= 5   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=121   D_wr=0   RF_s=1   RF_W_addr=12   RF_W_en=1   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 5
#                  210  Clock=1   Reset =1   IR=0010011110011100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  213  Clock=1   Reset =1   IR=0011101000011100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  220  Clock=0   Reset =1   IR=0011101000011100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  230  Clock=1   Reset =1   IR=0011101000011100   OutNext= 7   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  240  Clock=0   Reset =1   IR=0011101000011100   OutNext= 7   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  250  Clock=1   Reset =1   IR=0011101000011100   OutNext= 1   OutState= 7   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr=12   RF_W_en=1   RF_Ra_addr=10   RF_Rb_addr= 1   CurrentState= 7
#                  260  Clock=0   Reset =1   IR=0011101000011100   OutNext= 1   OutState= 7   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr=12   RF_W_en=1   RF_Ra_addr=10   RF_Rb_addr= 1   CurrentState= 7
#                  270  Clock=1   Reset =1   IR=0011101000011100   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  273  Clock=1   Reset =1   IR=0100110111101000   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  280  Clock=0   Reset =1   IR=0100110111101000   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  290  Clock=1   Reset =1   IR=0100110111101000   OutNext= 8   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  300  Clock=0   Reset =1   IR=0100110111101000   OutNext= 8   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  310  Clock=1   Reset =1   IR=0100110111101000   OutNext= 1   OutState= 8   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 8   RF_W_en=1   RF_Ra_addr=13   RF_Rb_addr=14   CurrentState= 8
#                  320  Clock=0   Reset =1   IR=0100110111101000   OutNext= 1   OutState= 8   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 8   RF_W_en=1   RF_Ra_addr=13   RF_Rb_addr=14   CurrentState= 8
#                  330  Clock=1   Reset =1   IR=0100110111101000   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  333  Clock=1   Reset =1   IR=0101001110100111   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  340  Clock=0   Reset =1   IR=0101001110100111   OutNext= 2   OutState= 1   PC_clr=0   PC_up=1   IR_Ld=1   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 1
#                  350  Clock=1   Reset =1   IR=0101001110100111   OutNext= 9   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  360  Clock=0   Reset =1   IR=0101001110100111   OutNext= 9   OutState= 2   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 2
#                  370  Clock=1   Reset =1   IR=0101001110100111   OutNext= 9   OutState= 9   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 9
#                  380  Clock=0   Reset =1   IR=0101001110100111   OutNext= 9   OutState= 9   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 9
#                  390  Clock=1   Reset =1   IR=0101001110100111   OutNext= 9   OutState= 9   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 9
#                  393  Clock=1   Reset =0   IR=0101001110100111   OutNext= 9   OutState= 9   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 9
#                  400  Clock=0   Reset =0   IR=0101001110100111   OutNext= 9   OutState= 9   PC_clr=0   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 9
#                  410  Clock=1   Reset =0   IR=0101001110100111   OutNext= 1   OutState= 0   PC_clr=1   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 0
#                  420  Clock=0   Reset =0   IR=0101001110100111   OutNext= 1   OutState= 0   PC_clr=1   PC_up=0   IR_Ld=0   D_addr=  0   D_wr=0   RF_s=0   RF_W_addr= 0   RF_W_en=0   RF_Ra_addr= 0   RF_Rb_addr= 0   CurrentState= 0
# ** Note: $stop    : ./FSM.sv(154)
#    Time: 423 ns  Iteration: 0  Instance: /FSM_tb
# Break in Module FSM_tb at ./FSM.sv line 154
do runMUX.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:56:22 on Jun 03,2021
# vlog -reportprogress 300 ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 19:56:22 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 19:56:24 on Jun 03,2021, Elapsed time: 0:00:40
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work Mux_2_to_1_tb 
# Start time: 19:56:24 on Jun 03,2021
# Loading sv_std.std
# Loading work.Mux_2_to_1_tb
# Loading work.Mux_2_to_1
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
#                    0  R_data = 41912 	 ALU_Q =  3110 	 RF_s = 0 	 W_data =  3110 	
#                   10  R_data = 58294 	 ALU_Q =  2246 	 RF_s = 0 	 W_data =  2246 	
#                   20  R_data =  3954 	 ALU_Q = 62254 	 RF_s = 1 	 W_data =  3954 	
#                   30  R_data = 21818 	 ALU_Q =  7274 	 RF_s = 0 	 W_data =  7274 	
#                   40  R_data = 64111 	 ALU_Q =  6742 	 RF_s = 1 	 W_data = 64111 	
#                   50  R_data = 30676 	 ALU_Q = 16558 	 RF_s = 1 	 W_data = 30676 	
#                   60  R_data = 47067 	 ALU_Q =  3589 	 RF_s = 1 	 W_data = 47067 	
#                   70  R_data = 33568 	 ALU_Q = 26085 	 RF_s = 1 	 W_data = 33568 	
#                   80  R_data = 36133 	 ALU_Q =  7913 	 RF_s = 1 	 W_data = 36133 	
#                   90  R_data = 40330 	 ALU_Q =  8536 	 RF_s = 1 	 W_data = 40330 	
#                  100  R_data = 53590 	 ALU_Q = 37833 	 RF_s = 1 	 W_data = 53590 	
#                  110  R_data = 45376 	 ALU_Q = 55168 	 RF_s = 0 	 W_data = 55168 	
#                  120  R_data = 51412 	 ALU_Q = 59790 	 RF_s = 0 	 W_data = 59790 	
#                  130  R_data =  6551 	 ALU_Q = 37157 	 RF_s = 1 	 W_data =  6551 	
#                  140  R_data = 29272 	 ALU_Q = 63825 	 RF_s = 0 	 W_data = 63825 	
#                  150  R_data = 56867 	 ALU_Q = 54100 	 RF_s = 1 	 W_data = 56867 	
#                  160  R_data = 22106 	 ALU_Q =  6886 	 RF_s = 0 	 W_data =  6886 	
#                  170  R_data = 12901 	 ALU_Q =  5610 	 RF_s = 1 	 W_data = 12901 	
#                  180  R_data =  4335 	 ALU_Q = 42052 	 RF_s = 1 	 W_data =  4335 	
#                  190  R_data =  4299 	 ALU_Q = 49991 	 RF_s = 1 	 W_data =  4299 	
#                  200  R_data = 54770 	 ALU_Q = 39905 	 RF_s = 1 	 W_data = 54770 	
#                  210  R_data = 54064 	 ALU_Q =  8822 	 RF_s = 1 	 W_data = 54064 	
#                  220  R_data = 17874 	 ALU_Q = 59158 	 RF_s = 1 	 W_data = 17874 	
#                  230  R_data =  4928 	 ALU_Q = 51893 	 RF_s = 1 	 W_data =  4928 	
#                  240  R_data = 40819 	 ALU_Q =  4256 	 RF_s = 1 	 W_data = 40819 	
#                  250  R_data =  7197 	 ALU_Q = 41940 	 RF_s = 1 	 W_data =  7197 	
#                  260  R_data = 41370 	 ALU_Q = 53380 	 RF_s = 1 	 W_data = 41370 	
#                  270  R_data = 48265 	 ALU_Q = 39178 	 RF_s = 1 	 W_data = 48265 	
#                  280  R_data =  3326 	 ALU_Q = 15948 	 RF_s = 0 	 W_data = 15948 	
#                  290  R_data =  6851 	 ALU_Q = 61320 	 RF_s = 0 	 W_data = 61320 	
#                  300  R_data = 17819 	 ALU_Q = 47859 	 RF_s = 1 	 W_data = 17819 	
#                  310  R_data = 17847 	 ALU_Q = 53515 	 RF_s = 1 	 W_data = 17847 	
#                  320  R_data = 44288 	 ALU_Q = 18697 	 RF_s = 0 	 W_data = 18697 	
#                  330  R_data = 15041 	 ALU_Q =  7684 	 RF_s = 0 	 W_data =  7684 	
#                  340  R_data = 17327 	 ALU_Q = 50543 	 RF_s = 1 	 W_data = 17327 	
#                  350  R_data = 59341 	 ALU_Q = 30572 	 RF_s = 0 	 W_data = 30572 	
#                  360  R_data = 16553 	 ALU_Q = 52732 	 RF_s = 1 	 W_data = 16553 	
#                  370  R_data = 28839 	 ALU_Q = 16443 	 RF_s = 0 	 W_data = 16443 	
#                  380  R_data = 31393 	 ALU_Q =  9605 	 RF_s = 0 	 W_data =  9605 	
#                  390  R_data = 57248 	 ALU_Q = 24853 	 RF_s = 0 	 W_data = 24853 	
#                  400  R_data = 47556 	 ALU_Q = 46987 	 RF_s = 0 	 W_data = 46987 	
#                  410  R_data = 26301 	 ALU_Q = 27244 	 RF_s = 1 	 W_data = 26301 	
#                  420  R_data =  5803 	 ALU_Q = 53674 	 RF_s = 1 	 W_data =  5803 	
#                  430  R_data =  6834 	 ALU_Q = 20822 	 RF_s = 0 	 W_data = 20822 	
#                  440  R_data = 14548 	 ALU_Q =  8929 	 RF_s = 0 	 W_data =  8929 	
#                  450  R_data = 62497 	 ALU_Q = 63840 	 RF_s = 1 	 W_data = 62497 	
#                  460  R_data = 46598 	 ALU_Q = 30708 	 RF_s = 0 	 W_data = 30708 	
#                  470  R_data = 38090 	 ALU_Q = 29224 	 RF_s = 1 	 W_data = 38090 	
#                  480  R_data = 28079 	 ALU_Q = 54252 	 RF_s = 0 	 W_data = 54252 	
#                  490  R_data = 25670 	 ALU_Q = 22856 	 RF_s = 1 	 W_data = 25670 	
#                  500  R_data = 38910 	 ALU_Q = 59044 	 RF_s = 1 	 W_data = 38910 	
#                  510  R_data = 61453 	 ALU_Q = 38518 	 RF_s = 1 	 W_data = 61453 	
#                  520  R_data = 44319 	 ALU_Q = 44537 	 RF_s = 1 	 W_data = 44319 	
#                  530  R_data = 51745 	 ALU_Q = 10349 	 RF_s = 1 	 W_data = 51745 	
#                  540  R_data =  8911 	 ALU_Q = 17393 	 RF_s = 1 	 W_data =  8911 	
#                  550  R_data = 42394 	 ALU_Q = 24432 	 RF_s = 0 	 W_data = 24432 	
#                  560  R_data = 38774 	 ALU_Q =  9198 	 RF_s = 0 	 W_data =  9198 	
#                  570  R_data = 20760 	 ALU_Q = 39505 	 RF_s = 0 	 W_data = 39505 	
#                  580  R_data = 29517 	 ALU_Q =  9409 	 RF_s = 1 	 W_data = 29517 	
#                  590  R_data =  2630 	 ALU_Q = 42736 	 RF_s = 1 	 W_data =  2630 	
# ** Note: $stop    : ./Mux_2_to_1.sv(27)
#    Time: 600 ps  Iteration: 0  Instance: /Mux_2_to_1_tb
# Break in Module Mux_2_to_1_tb at ./Mux_2_to_1.sv line 27
do runPC.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:35 on Jun 03,2021
# vlog -reportprogress 300 ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:57:35 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 19:57:38 on Jun 03,2021, Elapsed time: 0:01:14
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work PC_tb 
# Start time: 19:57:38 on Jun 03,2021
# Loading sv_std.std
# Loading work.PC_tb
# Loading work.PC
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
#                    0  0    0
#                   10  1    1
#                   20  0    1
#                   30  1    2
#                   40  0    2
#                   50  1    3
#                   60  0    3
#                   70  1    4
#                   80  0    4
#                   90  1    5
#                  100  0    5
#                  110  1    6
#                  120  0    6
#                  130  1    7
#                  140  0    7
# ** Note: $stop    : ./PC.sv(43)
#    Time: 150 ps  Iteration: 0  Instance: /PC_tb
# Break in Module PC_tb at ./PC.sv line 43
do runPC.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:58:27 on Jun 03,2021
# vlog -reportprogress 300 ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:58:27 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 19:58:30 on Jun 03,2021, Elapsed time: 0:00:52
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work PC_tb 
# Start time: 19:58:30 on Jun 03,2021
# Loading sv_std.std
# Loading work.PC_tb
# Loading work.PC
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
#                    0  0    0
#                   10  1    1
#                   20  0    1
#                   30  1    2
#                   40  0    2
#                   50  1    3
#                   60  0    3
#                   70  1    4
#                   80  0    4
#                   90  1    5
#                  100  0    5
#                  110  1    6
#                  120  0    6
#                  130  1    7
#                  140  0    7
#                  150  0    0
# ** Note: $stop    : ./PC.sv(45)
#    Time: 170 ps  Iteration: 0  Instance: /PC_tb
# Break in Module PC_tb at ./PC.sv line 45
do runReg.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:59:12 on Jun 03,2021
# vlog -reportprogress 300 ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 19:59:12 on Jun 03,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 19:59:15 on Jun 03,2021, Elapsed time: 0:00:45
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work regfile16x16a_tb 
# Start time: 19:59:15 on Jun 03,2021
# Loading sv_std.std
# Loading work.regfile16x16a_tb
# Loading work.regfile16x16a
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
#                    0   RF_W_en = 1   RF_W_addr =  0   W_Data = 14311   RF_Ra_addr =  0   Ra_data =     x   RF_Rb_addr =  0   Rb_data =     x
#                   10   RF_W_en = 1   RF_W_addr =  0   W_Data = 14311   RF_Ra_addr =  0   Ra_data = 14311   RF_Rb_addr =  0   Rb_data = 14311
#                   23   RF_W_en = 1   RF_W_addr =  1   W_Data = 19068   RF_Ra_addr =  1   Ra_data =     x   RF_Rb_addr =  1   Rb_data =     x
#                   30   RF_W_en = 1   RF_W_addr =  1   W_Data = 19068   RF_Ra_addr =  1   Ra_data = 19068   RF_Rb_addr =  1   Rb_data = 19068
#                   46   RF_W_en = 1   RF_W_addr =  2   W_Data = 26524   RF_Ra_addr =  2   Ra_data =     x   RF_Rb_addr =  2   Rb_data =     x
#                   50   RF_W_en = 1   RF_W_addr =  2   W_Data = 26524   RF_Ra_addr =  2   Ra_data = 26524   RF_Rb_addr =  2   Rb_data = 26524
#                   69   RF_W_en = 1   RF_W_addr =  3   W_Data = 47644   RF_Ra_addr =  3   Ra_data =     x   RF_Rb_addr =  3   Rb_data =     x
#                   70   RF_W_en = 1   RF_W_addr =  3   W_Data = 47644   RF_Ra_addr =  3   Ra_data = 47644   RF_Rb_addr =  3   Rb_data = 47644
#                   92   RF_W_en = 1   RF_W_addr =  4   W_Data = 65000   RF_Ra_addr =  4   Ra_data =     x   RF_Rb_addr =  4   Rb_data =     x
#                  110   RF_W_en = 1   RF_W_addr =  4   W_Data = 65000   RF_Ra_addr =  4   Ra_data = 65000   RF_Rb_addr =  4   Rb_data = 65000
#                  115   RF_W_en = 1   RF_W_addr =  5   W_Data =  9127   RF_Ra_addr =  5   Ra_data =     x   RF_Rb_addr =  5   Rb_data =     x
#                  130   RF_W_en = 1   RF_W_addr =  5   W_Data =  9127   RF_Ra_addr =  5   Ra_data =  9127   RF_Rb_addr =  5   Rb_data =  9127
#                  138   RF_W_en = 1   RF_W_addr =  6   W_Data = 18198   RF_Ra_addr =  6   Ra_data =     x   RF_Rb_addr =  6   Rb_data =     x
#                  150   RF_W_en = 1   RF_W_addr =  6   W_Data = 18198   RF_Ra_addr =  6   Ra_data = 18198   RF_Rb_addr =  6   Rb_data = 18198
#                  161   RF_W_en = 1   RF_W_addr =  7   W_Data = 57796   RF_Ra_addr =  7   Ra_data =     x   RF_Rb_addr =  7   Rb_data =     x
#                  170   RF_W_en = 1   RF_W_addr =  7   W_Data = 57796   RF_Ra_addr =  7   Ra_data = 57796   RF_Rb_addr =  7   Rb_data = 57796
#                  184   RF_W_en = 1   RF_W_addr =  8   W_Data = 62208   RF_Ra_addr =  8   Ra_data =     x   RF_Rb_addr =  8   Rb_data =     x
#                  190   RF_W_en = 1   RF_W_addr =  8   W_Data = 62208   RF_Ra_addr =  8   Ra_data = 62208   RF_Rb_addr =  8   Rb_data = 62208
#                  207   RF_W_en = 1   RF_W_addr =  9   W_Data = 15705   RF_Ra_addr =  9   Ra_data =     x   RF_Rb_addr =  9   Rb_data =     x
#                  210   RF_W_en = 1   RF_W_addr =  9   W_Data = 15705   RF_Ra_addr =  9   Ra_data = 15705   RF_Rb_addr =  9   Rb_data = 15705
#                  230   RF_W_en = 1   RF_W_addr = 10   W_Data = 19960   RF_Ra_addr = 10   Ra_data = 19960   RF_Rb_addr = 10   Rb_data = 19960
#                  253   RF_W_en = 1   RF_W_addr = 11   W_Data = 19451   RF_Ra_addr = 11   Ra_data =     x   RF_Rb_addr = 11   Rb_data =     x
#                  270   RF_W_en = 1   RF_W_addr = 11   W_Data = 19451   RF_Ra_addr = 11   Ra_data = 19451   RF_Rb_addr = 11   Rb_data = 19451
#                  276   RF_W_en = 1   RF_W_addr = 12   W_Data = 45841   RF_Ra_addr = 12   Ra_data =     x   RF_Rb_addr = 12   Rb_data =     x
#                  290   RF_W_en = 1   RF_W_addr = 12   W_Data = 45841   RF_Ra_addr = 12   Ra_data = 45841   RF_Rb_addr = 12   Rb_data = 45841
#                  299   RF_W_en = 1   RF_W_addr = 13   W_Data = 29858   RF_Ra_addr = 13   Ra_data =     x   RF_Rb_addr = 13   Rb_data =     x
#                  310   RF_W_en = 1   RF_W_addr = 13   W_Data = 29858   RF_Ra_addr = 13   Ra_data = 29858   RF_Rb_addr = 13   Rb_data = 29858
#                  322   RF_W_en = 1   RF_W_addr = 14   W_Data = 20476   RF_Ra_addr = 14   Ra_data =     x   RF_Rb_addr = 14   Rb_data =     x
#                  330   RF_W_en = 1   RF_W_addr = 14   W_Data = 20476   RF_Ra_addr = 14   Ra_data = 20476   RF_Rb_addr = 14   Rb_data = 20476
#                  345   RF_W_en = 1   RF_W_addr = 15   W_Data = 28837   RF_Ra_addr = 15   Ra_data =     x   RF_Rb_addr = 15   Rb_data =     x
#                  350   RF_W_en = 1   RF_W_addr = 15   W_Data = 28837   RF_Ra_addr = 15   Ra_data = 28837   RF_Rb_addr = 15   Rb_data = 28837
# ** Note: $stop    : ./regfile16x16a.sv(53)
#    Time: 368 ns  Iteration: 0  Instance: /regfile16x16a_tb
# Break in Module regfile16x16a_tb at ./regfile16x16a.sv line 53
do runProcessor(rtl).do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# 
# Top level modules:
# 	Processor
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 11:02:49 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./MUX_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:49 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./MUX_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 11:02:50 on Jun 04,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regfile16x16a.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:50 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 11:02:50 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:02:50 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 11:02:50 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 11:02:54 on Jun 04,2021, Elapsed time: 15:03:39
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 11:02:54 on Jun 04,2021
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading work.Datapath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.regfile16x16a
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveProcessor.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 20000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 30000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 50000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 3 RF_s=0 WData=    0
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 3 NextState= 1 RF_s=0 WData=    0
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 110000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 130000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 150000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=52229
# Time is 170000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 190000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 210000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 230000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=  437
# Time is 250000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 270000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 290000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 8  ALU A = cc05  ALU B = 01b5 ALU Out = ca50 State= 8 NextState= 1 RF_s=0 WData=51792
# Time is 310000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 330000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 350000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 370000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData= 4268
# Time is 390000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 410000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 7 RF_s=0 WData=    0
# Time is 430000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 7  ALU A = ca50  ALU B = 10ac ALU Out = dafc State= 7 NextState= 1 RF_s=0 WData=56060
# Time is 450000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 470000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 490000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 510000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=41024
# Time is 530000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 550000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 570000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 8  ALU A = dafc  ALU B = a040 ALU Out = 3abc State= 8 NextState= 1 RF_s=0 WData=15036
# Time is 590000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 1  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 610000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 2  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 2 NextState= 6 RF_s=0 WData=    0
# Time is 630000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 6  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 6 NextState= 1 RF_s=0 WData=    0
# Time is 650000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 1  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 670 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 703500 ps
# 
# End
do runProcessor(rtl).do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:18 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 11:05:18 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# 
# Top level modules:
# 	Processor
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Control.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./Control.sv 
# -- Compiling module Control
# -- Compiling module Control_tb
# 
# Top level modules:
# 	Control_tb
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# 
# Top level modules:
# 	IR
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./FSM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./FSM.sv 
# -- Compiling module FSM
# -- Compiling module FSM_tb
# 
# Top level modules:
# 	FSM_tb
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./MUX_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./MUX_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1_tb
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regfile16x16a.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./regfile16x16a.sv 
# -- Compiling module regfile16x16a
# -- Compiling module regfile16x16a_tb
# 
# Top level modules:
# 	regfile16x16a_tb
# End time: 11:05:19 on Jun 04,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:19 on Jun 04,2021
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 11:05:20 on Jun 04,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 11:05:23 on Jun 04,2021, Elapsed time: 0:02:29
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 11:05:23 on Jun 04,2021
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.Control
# Loading work.InstructionMemory
# Loading altera_mf_ver.altsyncram
# Loading work.PC
# Loading work.IR
# Loading work.FSM
# Loading work.Datapath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.regfile16x16a
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveProcessor.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 20000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 0  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 0 NextState= 1 RF_s=0 WData=    0
# Time is 30000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 50000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 3 RF_s=0 WData=    0
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 3 NextState= 1 RF_s=0 WData=    0
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 0000  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 110000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 130000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 150000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=52229
# Time is 170000 : Reset = 1   PC_Out = 02   IR_Out = 20b1  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 190000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 210000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 230000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=  437
# Time is 250000 : Reset = 1   PC_Out = 03   IR_Out = 21b2  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 270000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 290000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 8  ALU A = cc05  ALU B = 01b5 ALU Out = ca50 State= 8 NextState= 1 RF_s=0 WData=51792
# Time is 310000 : Reset = 1   PC_Out = 04   IR_Out = 4123  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 330000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 350000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 370000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData= 4268
# Time is 390000 : Reset = 1   PC_Out = 05   IR_Out = 2064  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 410000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 7 RF_s=0 WData=    0
# Time is 430000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 7  ALU A = ca50  ALU B = 10ac ALU Out = dafc State= 7 NextState= 1 RF_s=0 WData=56060
# Time is 450000 : Reset = 1   PC_Out = 06   IR_Out = 3345  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 470000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 4 RF_s=0 WData=    0
# Time is 490000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 4 NextState= 5 RF_s=1 WData=    0
# Time is 510000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 5  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 5 NextState= 1 RF_s=1 WData=41024
# Time is 530000 : Reset = 1   PC_Out = 07   IR_Out = 28a6  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 550000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000 State= 2 NextState= 8 RF_s=0 WData=    0
# Time is 570000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 8  ALU A = dafc  ALU B = a040 ALU Out = 3abc State= 8 NextState= 1 RF_s=0 WData=15036
# Time is 590000 : Reset = 1   PC_Out = 08   IR_Out = 4560  State = 1  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# Time is 610000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 2  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 2 NextState= 6 RF_s=0 WData=    0
# Time is 630000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 6  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 6 NextState= 1 RF_s=0 WData=    0
# Time is 650000 : Reset = 1   PC_Out = 09   IR_Out = 10cd  State = 1  ALU A = 3abc  ALU B = 3abc ALU Out = 0000 State= 1 NextState= 2 RF_s=0 WData=    0
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 670 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 703500 ps
# 
# End
